Para esta etapa do processo, preparamos um desafio t√©cnico tem como prop√≥sito medir suas habilidades, ver como estuda, pensa e se organiza na pr√°tica. A stack tecnol√≥gica utilizada √© de sua escolha.
Existem diversas maneiras e profundidades de solucionar o problema que estamos propondo. Vamos listar algumas sub-tasks
 que podem gui√°-lo(a) em rela√ß√£o a essas possibilidades.
---------
O desafio
---------
O Jusbrasil coleta uma variedade de dados p√∫blicos que n√£o s√£o facilmente acess√≠veis e melhora seu acesso para todos.
Um dos tipos de dados coletados s√£o os dados sobre processos.
O desafio √© fazer uma API que busque dados de um processo em todos os graus dos Tribunais de Justi√ßa de Alagoas (TJAL) e
do Cear√° (TJCE). Geralmente o processo come√ßa no primeiro grau e pode subir para o segundo. Voc√™ deve buscar o processo
em todos os graus e retornar suas informa√ß√µes.
Ser√° necess√°rio desenvolver crawlers para coletar esses dados no tribunal e uma API para fazer input e buscar
 o resultado depois.
-----
Input
-----
Voc√™ deve criar uma api para receber um json contendo o n√∫mero do processo. Para descobrir o tribunal voc√™ pode pedir no
 input ou usar o padr√£o cnj de numera√ß√£o de processos jur√≠dicos. ( https://www.cnj.jus.br/programas-e-acoes/numeracao-unica/ )
------
Output
------
O cliente tem que ser capaz de pegar o dado quando o processamento termina, ent√£o voc√™ deve criar um mecanismo que permita isso, retornando sempre um JSON para os processos encontrados em todas as esferas.
---------------------------------------------------------
Crawlers / Tribunais onde os dados ser√£o coletados
---------------------------------------------------------
Tanto o TJAL como o TJCE tem uma interface web para a consulta de processos. O endere√ßo para essas consultas s√£o:
* TJAL
* 1¬∫ grau - https://www2.tjal.jus.br/cpopg/open.do
* 2¬∫ grau - https://www2.tjal.jus.br/cposg5/open.do
* TJCE
* 1¬∫ grau - https://esaj.tjce.jus.br/cpopg/open.do
* 2¬∫ grau - https://esaj.tjce.jus.br/cposg5/open.do
Dados a serem coletados:
------------------------
* classe #classeProcesso
* √°rea  #areaProcesso
* assunto  #assuntoProcesso
* data de distribui√ß√£o  #dataHoraDistribuicaoProcesso
* juiz  #juizProcesso
* valor da a√ß√£o #valorAcaoProcesso
* partes do processo .nomeParteEAdvogado .tipoDeParticipacao
* lista das movimenta√ß√µes (data e movimento) .dataMovimentacao .descricaoMovimentacao
Exemplos de processos
---------------------
* 0710802-55.2018.8.02.0001 - TJAL
* 0022301-24.2011.8.02.0001 - TJAL
* para mais n√∫meros de processo, busque no di√°rio oficial de Alagoas: https://www.jusbrasil.com.br/diarios/DJAL/
* 0070337-91.2008.8.06.0001 - TJCE
* 0165801-59.2019.8.06.0001 - TJCE
* para mais n√∫meros de processo, busque no di√°rio de justi√ßa do estado do Cear√°: https://www.jusbrasil.com.br/diarios/DJCE/
------------------------------------------
Alguns pontos que ser√£o analisados:
------------------------------------------
* Organiza√ß√£o do c√≥digo
* Testes
* Facilidade ao rodar o projeto
* Escalabilidade: o qu√£o f√°cil √© escalar os crawlers.
* Performance: aqui avaliamos o tempo para crawlear todo o processo jur√≠dico.
Happy coding! üôÇ